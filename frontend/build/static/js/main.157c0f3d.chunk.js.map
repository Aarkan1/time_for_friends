{"version":3,"sources":["contexts/FriendsContext.js","utilities/utils.js","components/Clock.js","components/FriendCard.js","components/TimeSlider.js","models/Rest.js","models/Person.js","pages/Home.js","components/DeleteFriendButton.js","components/AddPhoneNumbers.js","components/AddEmails.js","pages/AddFriend.js","pages/FriendDetails.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["FriendsContext","createContext","FriendsContextProvider","state","friends","filteredFriends","filteredTime","ignoreMethods","methods","Object","keys","getOwnPropertyDescriptors","this","constructor","prototype","filter","m","includes","assign","map","method","event","time","setState","filterFriends","friend","offset","timeOffset","moment","utcOffset","hour","Date","now","getHours","setTimeout","sortFriends","f","_id","length","addFriend","checked","sort","a","b","timezone","name","toLowerCase","Provider","value","methodsFactory","props","children","Component","sleep","ms","Promise","resolve","availabilityIcon","works","sleeps","split","workStart","workEnd","sleepStart","sleepEnd","localeHour","isSleeping","className","validateForm","s","trim","document","querySelector","classList","add","valName","city","valCity","valPhone","phoneNumbers","i","undefined","valEmail","mailAddresses","test","valWorkSleep","Clock","_isMounted","onUpdate","updateTime","id","toLocaleTimeString","toLocaleDateString","FriendCard","isNight","e","setNight","render","history","onClick","push","country","getLocaleTime","TimeSlider","initSlider","slider","noUiSlider","updateOptions","start","initTime","getElementById","divId","behaviour","connect","step","tooltips","wNumb","mark","decimals","encoder","Math","round","orientation","range","min","max","format","to","from","Number","pips","mode","stepped","density","on","v","timeFilter","end","contextType","customGet","url","customFetch","customPost","body","fetch","headers","JSON","stringify","res","json","Person","obj","tz","query","options","encodeURIComponent","key","val","RegExp","$regex","toString","result","model","__v","console","log","results","Home","search","sortName","searchByTimezone","setFilteredTime","context","category","clearTimeout","throttleSearch","regex","find","setFriends","type","onChange","target","toggleSearchTimezone","onKeyUp","htmlFor","sortByNameSwitch","listFriends","withRouter","match","params","href","preventDefault","findOne","person","delete","AddPhoneNumber","numbers","number","placeholder","replace","remove","p","AddEmails","emails","email","AddFriend","defaultFriend","countryCode","countryOptions","querySelectorAll","c","innerHTML","countryListChange","el","focus","blur","M","FormSelect","init","warn","save","values","ct","getAllCountries","parse","timezoneList","timezones","zone","join","reverse","action","onSubmit","addNewFriend","defaultValue","countryList","AddPhoneNumbers","setWorkTime","setSleepTime","clearFields","FriendDetails","listPhoneNumbers","listEmails","editButton","Navbar","changeTheme","Sidenav","getInstance","close","theme","documentElement","style","setProperty","data-target","toggleDarkMode","closeSidenav","App","AutoInit","window","replaceState","location","pathname","exact","path","component","toTopHandler","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.157c0f3d.chunk.js","sourcesContent":["import React, { Component, createContext } from \"react\";\r\nimport moment from \"moment-timezone\";\r\n\r\nexport const FriendsContext = createContext();\r\n\r\nexport default class FriendsContextProvider extends Component {\r\n  state = {\r\n    friends: [],\r\n    filteredFriends: [],\r\n    filteredTime: [0, 24]\r\n  };\r\n\r\n  methodsFactory() {\r\n    const ignoreMethods = [\"constructor\", \"componentDidMount\", \"render\", \"methodsFactory\"];\r\n    const methods = Object.keys(Object.getOwnPropertyDescriptors(this.constructor.prototype))\r\n      .filter(m => !ignoreMethods.includes(m));\r\n    \r\n    return Object.assign({}, ...methods.map(method => ({ [method]: event => this[method](event) })))\r\n  }\r\n\r\n  setFilteredTime(time) {\r\n    this.setState({ filteredTime: [...time] });\r\n    this.filterFriends();\r\n  }\r\n\r\n  filterFriends() {\r\n    const { filteredTime, friends } = this.state;\r\n    let filteredFriends = friends.filter(friend => {\r\n      let offset = friend.timeOffset - moment().utcOffset() * 60 * 1000 || 0;\r\n      let time = new Date(Date.now() + offset);\r\n      let hour = time.getHours();\r\n      return hour >= filteredTime[0] && hour <= filteredTime[1];\r\n    });\r\n    this.setState({ filteredFriends });\r\n  }\r\n\r\n  setFriends(friends) {\r\n    this.setState({ friends, filteredFriends: friends });\r\n    setTimeout(() => {\r\n      this.sortFriends(false);\r\n    }, 5);\r\n  }\r\n\r\n  addFriend(friend) {\r\n    // don't duplicate friends\r\n    if (this.state.friends.filter(f => f._id === friend._id).length) return;\r\n\r\n    let friends = [...this.state.friends, friend];\r\n    this.setState({ friends, filteredFriends: friends });\r\n  }\r\n\r\n  addManyFriend(friends) {\r\n    friends.map(friend => this.addFriend(friend));\r\n  }\r\n\r\n  sortFriends(checked) {\r\n    this.state.friends.sort((a, b) => !checked\r\n        ? a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1\r\n        : a.timezone < b.timezone ? -1 : 1\r\n    );\r\n    this.filterFriends();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <FriendsContext.Provider value={{ ...this.state, ...this.methodsFactory() }}>\r\n        {this.props.children}\r\n      </FriendsContext.Provider>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport moment from 'moment-timezone'\r\n\r\nexport function sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\n// help function for checking if timezone uses DST\r\nexport function getDSToffset(tz) {\r\n  var janOffset = moment.tz({month: 0, day: 1}, tz).utcOffset();\r\n  var junOffset = moment.tz({month: 5, day: 1}, tz).utcOffset();\r\n  return Math.abs(junOffset - janOffset);\r\n}\r\n\r\nexport function availabilityIcon(friend) {\r\n  if(!friend.works && !friend.sleeps) return;\r\n\r\n  let [workStart, workEnd] = friend.works.split('-');\r\n  let [sleepStart, sleepEnd] = friend.sleeps.split('-');\r\n  const localeHour = new Date(Date.now() + friend.timeOffset).getHours();\r\n\r\n  const isWorking = workStart < localeHour && workEnd > localeHour;\r\n  const isSleeping = sleepEnd > localeHour || sleepStart < localeHour;\r\n\r\n  return (isWorking ? <i className=\"material-icons right\">emoji_transportation</i> \r\n        : isSleeping ? <i className=\"material-icons right\">snooze</i> \r\n        : <i className=\"material-icons right\">mood</i>);\r\n} \r\n\r\nexport function validateForm(s) {\r\n  !s.name.trim().length && document.querySelector('#friend-name').classList.add(\"validate-error\");\r\n  const valName = s.name.trim().length > 0;\r\n  \r\n  !s.city.trim().length && document.querySelector('#friend-city').classList.add(\"validate-error\");\r\n  const valCity = s.city.trim().length > 0;\r\n  \r\n  const valPhone = (!s.phoneNumbers.map((m, i) => {\r\n    if(m.length < 10 || m.length > 16) {\r\n      document.querySelector('.friend-phone-' + i).classList.add(\"validate-error\");\r\n      return i;\r\n    } \r\n    return undefined;\r\n  }).filter(m => m !== undefined).length > 0);\r\n\r\n  const valEmail = (!s.mailAddresses.map((m, i) => {\r\n    if(!/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(m)) {\r\n      document.querySelector('.friend-email-' + i).classList.add(\"validate-error\");\r\n      return i;\r\n    } \r\n    return undefined;\r\n  }).filter(m => m !== undefined).length > 0);\r\n\r\n  // extract work and sleep time\r\n  // and convert values to numbers \r\n  // for number comparison\r\n  let [workStart, workEnd] = s.works.split('-');\r\n  let [sleepStart, sleepEnd] = s.sleeps.split('-');\r\n  workStart = workStart / 1;\r\n  workEnd = workEnd / 1;\r\n  sleepStart = sleepStart / 1;\r\n  sleepEnd = sleepEnd / 1;\r\n\r\n  const valWorkSleep = (workStart > sleepEnd) && (workEnd < sleepStart);\r\n  !valWorkSleep && document.querySelector('#work-sleep-sliders').classList.add(\"validate-error\");\r\n  \r\n  return valName && valCity && valPhone && valEmail && valWorkSleep;\r\n}","import React, { Component } from \"react\";\r\nimport { sleep } from \"../utilities/utils\";\r\n\r\nexport default class Clock extends Component {\r\n  offset = this.props.timeOffset || 0;\r\n\r\n  _isMounted = false;\r\n  state = {\r\n    time: new Date(Date.now() + this.offset)\r\n  }\r\n\r\n  async updateTime() {\r\n    while(this._isMounted) {\r\n      this.setState({ time: new Date(Date.now() + this.offset) })\r\n      this.props.onUpdate && this.props.onUpdate(this.state.time.getHours() > 20 || this.state.time.getHours() < 8)\r\n      await sleep(500)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.updateTime()\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <span id=\"clock\" className=\"center-align\">\r\n        <h4 id=\"clock-time\">{this.state.time.toLocaleTimeString()}</h4>\r\n        <h6 id=\"clock-date\" className=\"grey-text\">{this.state.time.toLocaleDateString()}</h6>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Clock from \"./Clock\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { availabilityIcon } from '../utilities/utils'\r\n\r\nexport default class FriendCard extends Component {\r\n  state = {\r\n    isNight: false\r\n  };\r\n\r\n  setNight(e) {\r\n    this.setState({\r\n      isNight: e\r\n    });\r\n  }\r\n\r\n  getLocaleTime() {\r\n    return (\r\n      <Clock\r\n        onUpdate={e => this.setNight(e)}\r\n        {...{ timeOffset: this.props.timeOffset }}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Route\r\n        render={({ history }) => (\r\n          <div\r\n            className=\"card waves-effect light-waves\"\r\n            onClick={() => history.push(\"/friend/\" + this.props._id)}\r\n          >\r\n            <div className=\"card-content\">\r\n              <div className=\"card-title\">{this.props.name}\r\n                {availabilityIcon(this.props)}\r\n                  <i className={this.state.isNight \r\n                    ? 'material-icons right blue-text text-darken-3' \r\n                    : 'material-icons right orange-text'}>\r\n                    {this.state.isNight ? 'nights_stay' : 'wb_sunny'}\r\n                  </i>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col s6\">\r\n                  <p>{this.props.city}</p>\r\n                  <p>{this.props.country}</p>\r\n                  <p>{this.props.timezone}</p>\r\n                </div>\r\n                <div className=\"col s6\">{this.getLocaleTime()}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { FriendsContext } from \"../contexts/FriendsContext\";\r\nimport * as noUiSlider from \"nouislider/distribute/nouislider.js\";\r\nimport wNumb from \"wnumb\";\r\n\r\nexport default class TimeSlider extends Component {\r\n  static contextType = FriendsContext;\r\n  \r\n  componentDidMount() {\r\n    this.initSlider();\r\n\r\n    setTimeout(() => {\r\n      this.props.updateTime && this.slider.noUiSlider.updateOptions({start: this.props.updateTime.split('-')})\r\n    }, 500);\r\n  }\r\n\r\n  initSlider() {\r\n    let sliderRange = {\r\n      min: [0],\r\n      \"25%\": [6],\r\n      \"50%\": [12],\r\n      \"75%\": [18],\r\n      max: [24]\r\n    };\r\n\r\n    let time = this.props.initTime ? this.props.initTime.split('-') : [0, 24]\r\n\r\n    this.slider = document.getElementById(this.props.divId);\r\n    noUiSlider\r\n      .create(this.slider, {\r\n        start: time,\r\n        behaviour: 'drag-tap',\r\n        connect: true,\r\n        step: 1,\r\n        tooltips: [\r\n          wNumb({\r\n            mark: \":\",\r\n            decimals: 2,\r\n            encoder: function(value) {\r\n              return Math.round(value);\r\n            }\r\n          }),\r\n          wNumb({\r\n            mark: \":\",\r\n            decimals: 2,\r\n            encoder: function(value) {\r\n              return Math.round(value);\r\n            }\r\n          })\r\n        ],\r\n        orientation: \"horizontal\",\r\n        range: sliderRange,\r\n        format: {\r\n          to: value => {\r\n            return value;\r\n          },\r\n          from: value => {\r\n            return Number(value);\r\n          }\r\n        },\r\n        pips: {\r\n          mode: \"range\",\r\n          stepped: true,\r\n          density: 4,\r\n          format: wNumb({\r\n            mark: \":\",\r\n            decimals: 2\r\n          })\r\n        }\r\n      })\r\n      .on(\"update\", (v, i) => this.timeFilter(v, i));\r\n  }\r\n\r\n  timeFilter(value, i) {\r\n    let start = Math.round(value[0]);\r\n    let end = Math.round(value[1]);\r\n\r\n    this.props.onUpdate([start, end]);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"container\" id={this.props.divId}></div>\r\n        <br />\r\n        <br />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","let type;\r\n\r\nexport default class Rest {\r\n  constructor(obj) {\r\n    // type = this.constructor.name;    \r\n    Object.assign(this, obj);\r\n  }\r\n\r\n  static async findOne(query = {}, options = {}) {\r\n    const id = query._id;\r\n    query = typeof query === 'object' ? query : { _id: query }\r\n    \r\n    query = encodeURIComponent(JSON.stringify(query, (key, val) =>\r\n    val.constructor === RegExp ?\r\n      { $regex: val.toString() } : val));\r\n    options = encodeURIComponent(JSON.stringify(options));\r\n    \r\n    let result = await customGet(`/rest/${this.constructor.name || this.name}/${id ? id : this._id}?q=${query}&o=${options}`);\r\n    let model = new this(result)\r\n    delete model.__v;\r\n    return model\r\n  }\r\n\r\n  static async find(query = {}, options = {}) {\r\n    console.log(this.constructor);\r\n    \r\n    query = encodeURIComponent(JSON.stringify(query, (key, val) =>\r\n    val.constructor === RegExp ?\r\n      { $regex: val.toString() } : val));\r\n    options = encodeURIComponent(JSON.stringify(options));\r\n\r\n    let results = await customGet(`/rest/${this.constructor.name || this.name}?q=${query}&o=${options}`); \r\n    results = results.results;\r\n    \r\n    return results.map(result => {\r\n      let model = new this(result)\r\n      delete model.__v;\r\n      return model\r\n    })\r\n  }\r\n\r\n  async save() {\r\n    return this._id ? await customPut(`/rest/${this.constructor.name || this.name}`, this) \r\n             : await customPost(`/rest/${this.constructor.name || this.name}`, this);\r\n  }\r\n\r\n  async delete() {\r\n    return await customDelete(`/rest/${this.constructor.name || this.name}/${this._id}`)\r\n  }\r\n}\r\n\r\nfunction customGet(url) {         return customFetch('GET', url)}\r\nfunction customPost(url, body) {  return customFetch('POST', url, body)}\r\nfunction customPut(url, body) {   return customFetch('PUT', url, body)}\r\nfunction customDelete(url) {      return customFetch('DELETE', url)}\r\n\r\nasync function customFetch(method, url, body) {\r\n  let res = await fetch(url, {\r\n    method: method,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Accept\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(body)\r\n  });\r\n  return await res.json();\r\n}\r\n","import Rest from './Rest'\r\nimport moment from 'moment-timezone';\r\n\r\nexport default class Person extends Rest {\r\n  constructor(obj) {\r\n    super(obj);\r\n    let timeOffset = (moment().tz(obj.timezone).utcOffset() - moment().utcOffset()) * 60 * 1000\r\n    Object.assign(this, obj, {timeOffset})\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { FriendsContext } from \"../contexts/FriendsContext\";\r\nimport FriendCard from \"../components/FriendCard\";\r\nimport Clock from \"../components/Clock\";\r\nimport TimeSlider from \"../components/TimeSlider\";\r\nimport Person from \"../models/Person\";\r\n\r\nexport default class Home extends Component {\r\n  static contextType = FriendsContext;\r\n  state = {\r\n    search: \"\",\r\n    isNight: false,\r\n    sortName: true,\r\n    searchByTimezone: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.filterFriends();\r\n  }\r\n\r\n  timeFilter(time) {\r\n    const { setFilteredTime } = this.context;\r\n    let start, end;\r\n    start = time[0];\r\n    end = time[1];\r\n    setFilteredTime([start, end]);\r\n  }\r\n\r\n  setNight(e) {\r\n    this.setState({\r\n      isNight: e\r\n    });\r\n  }\r\n\r\n  filterFriends() {\r\n    let category = this.state.searchByTimezone ? \"timezone\" : \"name\";\r\n\r\n    clearTimeout(this.throttleSearch);\r\n    this.throttleSearch = setTimeout(async () => {\r\n      let regex = new RegExp(this.state.search, \"i\");\r\n      let friends = await Person.find({ [category]: regex }, { sort: \"name\" });\r\n      this.context.setFriends(friends);\r\n    }, 300);\r\n  }\r\n\r\n  listFriends() {\r\n    let { filteredFriends } = this.context;\r\n    return filteredFriends.map((friend, i) => (\r\n      <div className=\"col s12 l6\" key={friend.name + i}>\r\n        <FriendCard {...friend} />\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  sortByNameSwitch() {\r\n    return (\r\n      <span className=\"switch\">\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"checkbox\"\r\n            value={this.state.sortName}\r\n            onChange={e => {\r\n              this.context.sortFriends(e.target.checked);\r\n            }}\r\n          />\r\n          <span className=\"lever\"></span>\r\n          Timezone\r\n        </label>\r\n      </span>\r\n    );\r\n  }\r\n\r\n  toggleSearchTimezone() {\r\n    return (\r\n      <div id=\"timezone-checkbox\" className=\"row valign-wrapper\">\r\n        <label className=\"col s1\">\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"filled-in\"\r\n            checked={this.state.searchByTimezone}\r\n            onChange={e => {\r\n              this.setState({ searchByTimezone: e.target.checked });\r\n              setTimeout(() => {\r\n                this.filterFriends();\r\n              }, 5);\r\n            }}\r\n          />\r\n          <span id=\"timezone-checkbox-span\"></span>\r\n        </label>\r\n        <p className=\"col s11\">Search by timezone</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"center-align\">\r\n          <br />\r\n          <i\r\n            id=\"main-day-icon\"\r\n            className={\r\n              this.state.isNight\r\n                ? \"material-icons right blue-text text-darken-3\"\r\n                : \"material-icons right orange-text\"\r\n            }\r\n          >\r\n            {this.state.isNight ? \"nights_stay\" : \"wb_sunny\"}\r\n          </i>\r\n          <Clock onUpdate={e => this.setNight(e)} />\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col s12 l6 offset-l3\">\r\n              {this.toggleSearchTimezone()}\r\n              <div className=\"input-field\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={this.state.search}\r\n                  onChange={e => this.setState({ search: e.target.value })}\r\n                  onKeyUp={() => this.filterFriends()}\r\n                  id=\"search-query\"\r\n                />\r\n                <label htmlFor=\"search-query\">\r\n                  Search friend by\r\n                  {this.state.searchByTimezone ? \" timezone\" : \" name\"}\r\n                </label>\r\n            </div>\r\n            <TimeSlider\r\n              divId=\"time-slider-filter-friends\"\r\n              onUpdate={time => this.timeFilter(time)}\r\n            />\r\n            <p>Sort by: {this.sortByNameSwitch()}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"App-header row\">{this.listFriends()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Person from \"../models/Person\";\r\n\r\nconst DeleteFriendButton = props => {\r\n  const id = props.match.params.id;\r\n  return (\r\n    <a\r\n      href={\"add-friend/\" + id}\r\n      className=\"btn red lighten-1 waves-effect waves-light col s3 offset-s4\"\r\n      onClick={async e => {\r\n        e.preventDefault();\r\n        let person = await Person.findOne(id);\r\n        console.log(await person.delete());\r\n        props.history.push(\"/\");\r\n      }}\r\n    >\r\n      Delete\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default withRouter(DeleteFriendButton);\r\n","import React from \"react\";\r\n\r\nconst AddPhoneNumber = props => {\r\n  function phoneNumbers() {\r\n    return props.numbers.map((number, i) => (\r\n      <input\r\n        key={\"number\" + i}\r\n        type=\"text\"\r\n        className={\"friend-phone-\" + i}\r\n        id=\"friend-phone\"\r\n        placeholder={i ? \"Phone number \" + (i + 1) : null}\r\n        value={number\r\n          .replace(/[^\\d\\s-+]/, \"\")\r\n          .replace(/-+/g, \"-\")\r\n          .replace(/\\++/g, \"+\")\r\n          .replace(/\\s+/g, \" \")}\r\n        onChange={e => {\r\n          document\r\n            .querySelector(\".friend-phone-\" + i)\r\n            .classList.remove(\"validate-error\");\r\n          let phoneNumbers = [...props.numbers.filter(p => p), \"\"];\r\n          phoneNumbers[i] = e.target.value;\r\n          props.onUpdate(phoneNumbers);\r\n        }}\r\n      />\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <div className=\"input-field\">\r\n      <i className=\"material-icons prefix\">phone</i>\r\n      {phoneNumbers()}\r\n      <label htmlFor=\"friend-phone\">Phone numbers</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPhoneNumber;\r\n","import React from \"react\";\r\n\r\nconst AddEmails = props => {\r\n  function mailAddresses() {\r\n    return props.emails.map((email, i) => (\r\n      <input\r\n        key={\"email\" + i}\r\n        type=\"email\"\r\n        className={\"friend-email-\" + i}\r\n        id=\"friend-emails\"\r\n        value={email}\r\n        placeholder={i ? \"Email address \" + (i + 1) : null}\r\n        onChange={e => {\r\n          document\r\n            .querySelector(\".friend-email-\" + i)\r\n            .classList.remove(\"validate-error\");\r\n          let mailAddresses = [...props.emails.filter(m => m), \"\"];\r\n          mailAddresses[i] = e.target.value;\r\n          props.onUpdate(mailAddresses)\r\n        }}\r\n      />\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <div className=\"input-field\">\r\n      <i className=\"material-icons prefix\">email</i>\r\n      {mailAddresses()}\r\n      <label htmlFor=\"friend-emails\">Email addresses</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddEmails;","import React, { Component } from \"react\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FriendsContext } from \"../contexts/FriendsContext\";\r\nimport Person from \"../models/Person\";\r\nimport M from \"materialize-css\";\r\nimport DeleteFriendButton from \"../components/DeleteFriendButton\";\r\nimport AddPhoneNumbers from \"../components/AddPhoneNumbers\";\r\nimport AddEmails from \"../components/AddEmails\";\r\nimport TimeSlider from \"../components/TimeSlider\";\r\nimport ct from 'countries-and-timezones'\r\nimport { sleep, validateForm } from '../utilities/utils'\r\n\r\nclass AddFriend extends Component {\r\n  static contextType = FriendsContext;\r\n  defaultFriend = {\r\n    name: \"\",\r\n    city: \"\",\r\n    country: \"Sweden\",\r\n    countryCode: \"SE\",\r\n    timezone: \"Europe/Stockholm\",\r\n    phoneNumbers: [\"\"],\r\n    mailAddresses: [\"\"],\r\n    works: '9-17',\r\n    sleeps: '6-22'\r\n  }\r\n  state = {...this.defaultFriend};\r\n\r\n  async componentDidMount() {\r\n    const id = this.props.match.params.id;\r\n    if(id) {\r\n      let person = this.context.friends.filter(f => f._id === id)[0] || await Person.findOne(id);\r\n      this.setState({...person})\r\n      await sleep(5);\r\n      \r\n      // Extreme workaround because of Materialize css boilerplate\r\n      let country = document.querySelector('#country-list')\r\n      let countryOptions = country.querySelectorAll('option')\r\n      countryOptions = [...countryOptions].filter(c => c.innerHTML === this.state.country)[0]\r\n      country.value = countryOptions.value\r\n      this.countryListChange({target: { value: countryOptions.value }})\r\n      \r\n      let timezoneList = document.querySelector(\"#timezone-list\")\r\n      timezoneList.value = this.state.timezone\r\n      // fix for label bug\r\n      await sleep(50);\r\n      // eslint-disable-next-line\r\n      for(let el of document.querySelectorAll('input')) {\r\n        el.focus();\r\n        await sleep(5);\r\n        el.blur();\r\n      }\r\n    } else {\r\n      this.countryListChange({target: { value: '{\"id\":\"SE\",\"name\":\"Sweden\",\"timezones\":[\"Europe/Stockholm\"]}'}})\r\n    }\r\n    M.FormSelect.init(document.querySelectorAll(\"select\"));\r\n  }\r\n\r\n  async addNewFriend(e) {\r\n    e.preventDefault();\r\n    this.setState({\r\n      phoneNumbers: this.state.phoneNumbers.filter(p => p),\r\n      mailAddresses: this.state.mailAddresses.filter(m => m)\r\n    })\r\n    await sleep(5)\r\n    \r\n    if (!validateForm(this.state)) {\r\n      console.warn(\"Error: Form did not validate\");\r\n      this.setState({\r\n        phoneNumbers: [...this.state.phoneNumbers.filter(p => p), \"\"],\r\n        mailAddresses: [...this.state.mailAddresses.filter(m => m), \"\"]\r\n      })\r\n      return;\r\n    }\r\n    let person = new Person(this.state);\r\n    person = await person.save()\r\n    this.props.history.push('/friend/' + person._id)\r\n  }\r\n\r\n  clearFields() {\r\n    this.setState({...this.defaultFriend});\r\n  }\r\n\r\n  handleAddPhoneNumber(e, i) {\r\n    let numbers = [...this.state.phoneNumbers];\r\n    numbers[i] = e.target.value;\r\n    this.setState({ phoneNumbers: numbers });\r\n  }\r\n\r\n  countryList() {\r\n    return Object.values(ct.getAllCountries()).map(country => (\r\n      <option key={country.id} value={JSON.stringify(country)}>\r\n        {country.name}\r\n      </option>\r\n    ));\r\n  }\r\n\r\n  async countryListChange(e) {\r\n    let country = JSON.parse(e.target.value)\r\n    this.setState({ countryCode: country.id, country: country.name })\r\n\r\n    await sleep(5)\r\n    let timezoneList = document.querySelector(\"#timezone-list\")\r\n    M.FormSelect.init(timezoneList);\r\n    this.setState({timezone: timezoneList.querySelectorAll('option')[0].value})\r\n  }\r\n\r\n  timezoneList() {\r\n    return ct.getAllCountries()[this.state.countryCode].timezones.map(zone => (\r\n      <option key={zone} value={zone}>\r\n        {zone}\r\n      </option>\r\n    ));\r\n  }\r\n\r\n  setWorkTime(time) {\r\n    document.querySelector('#work-sleep-sliders').classList.remove(\"validate-error\");\r\n    this.setState({works: time.join('-')})\r\n  }\r\n  \r\n  setSleepTime(time) {\r\n    document.querySelector('#work-sleep-sliders').classList.remove(\"validate-error\");\r\n    this.setState({sleeps: time.reverse().join('-')})\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <h4 className=\"center-align\">{this.props.match.params.id ? 'Edit friend' : 'Add new friend'}</h4>\r\n        <form\r\n          className=\"col s12 m8 l6 offset-m2 offset-l3\"\r\n          action=\"\"\r\n          onSubmit={e => this.addNewFriend(e)}>\r\n          <div className=\"input-field\">\r\n            <i className=\"material-icons prefix\">account_circle</i>\r\n            <input\r\n              type=\"text\"\r\n              id=\"friend-name\"\r\n              value={this.state.name}\r\n              onChange={e => {\r\n                document.querySelector('#friend-name').classList.remove(\"validate-error\")\r\n                this.setState({ name: e.target.value })\r\n                }} />\r\n            <label htmlFor=\"friend-name\">Name</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <i className=\"material-icons prefix\">location_city</i>\r\n            <input\r\n              type=\"text\"\r\n              id=\"friend-city\"\r\n              value={this.state.city}\r\n              onChange={e => {\r\n                document.querySelector('#friend-city').classList.remove(\"validate-error\")\r\n                this.setState({ city: e.target.value })\r\n              }} />\r\n            <label htmlFor=\"friend-city\">City</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <i className=\"material-icons prefix\">emoji_flags</i>\r\n            <select\r\n            id=\"country-list\"\r\n              defaultValue={'{\"id\":\"SE\",\"name\":\"Sweden\",\"timezones\":[\"Europe/Stockholm\"]}'}\r\n              onChange={e => this.countryListChange(e)}>\r\n              {this.countryList()}\r\n            </select>\r\n            <label>Country</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <i className=\"material-icons prefix\">schedule</i>\r\n            <select\r\n            id=\"timezone-list\"\r\n            onChange={e => {\r\n                console.log(e.target.value);\r\n                this.setState({ timezone: e.target.value })\r\n              }}>\r\n              {this.timezoneList()}\r\n            </select>\r\n            <label>Timezone</label>\r\n          </div>\r\n          <AddPhoneNumbers numbers={this.state.phoneNumbers} onUpdate={phoneNumbers => {\r\n            this.setState({phoneNumbers});\r\n            }}/>\r\n          <AddEmails emails={this.state.mailAddresses} onUpdate={mailAddresses => {\r\n            this.setState({mailAddresses});\r\n            }}/>\r\n          <div id=\"work-sleep-sliders\">\r\n            <div className=\"row valign-wrapper\">\r\n              <i className=\"material-icons col\">emoji_transportation</i>\r\n              <p className=\"col\">Working time</p>\r\n            </div>\r\n            <TimeSlider divId=\"time-slider-work\" \r\n              initTime={this.state.works} \r\n              updateTime={this.state.works} \r\n              onUpdate={time => this.setWorkTime(time)} />\r\n            <div className=\"row valign-wrapper\">\r\n              <i className=\"material-icons col\">snooze</i>\r\n              <p className=\"col\">Sleeping time</p>\r\n            </div>\r\n            {/* Needs to reverse sleep time to update slider correctly */}\r\n            <TimeSlider divId=\"time-slider-sleep\" \r\n              initTime={this.state.sleeps} \r\n              updateTime={this.state.sleeps.split('-').reverse().join('-')} \r\n              onUpdate={time => this.setSleepTime(time)} />\r\n          </div>\r\n          <br/>\r\n          <div className=\"row\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={e => this.clearFields(e)}\r\n              className=\"col offset-s2 waves-effect lighten-waves btn red lighten-2\">\r\n              Clear\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              onClick={e => this.addNewFriend(e)}\r\n              className=\"col offset-s3 waves-effect lighten-waves btn\">\r\n              Submit\r\n            </button>\r\n          </div> \r\n          {this.props.match.params.id && \r\n          (<div className=\"row\">\r\n            <br/>\r\n            <br/>\r\n            <DeleteFriendButton />\r\n          </div>)}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(AddFriend)","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { FriendsContext } from \"../contexts/FriendsContext\";\r\nimport Person from \"../models/Person\";\r\nimport Clock from \"../components/Clock\";\r\nimport { availabilityIcon } from \"../utilities/utils\";\r\n\r\nclass FriendDetails extends Component {\r\n  static contextType = FriendsContext;\r\n  state = {\r\n    friend: {\r\n      isNight: false,\r\n      phoneNumbers: [],\r\n      mailAddresses: []\r\n    }\r\n  };\r\n\r\n  setNight(e) {\r\n    this.setState({\r\n      isNight: e\r\n    });\r\n  }\r\n\r\n  getLocaleTime() {\r\n    return (\r\n      <Clock onUpdate={e => this.setNight(e)}\r\n        {...{ timeOffset: this.state.friend.timeOffset }} />\r\n    );\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const id = this.props.match.params.id;\r\n    // load saved friend, or fetch from DB\r\n    let friend =\r\n      this.context.friends.filter(f => f._id === id)[0] ||\r\n      (await Person.findOne(id));\r\n    this.setState({ friend });\r\n  }\r\n\r\n  listEmails(emails) {\r\n    return emails.map((email, i) => (\r\n      <div key={email + i}>\r\n        <p>{email}</p>\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  listPhoneNumbers(phoneNumbers) {\r\n    return phoneNumbers.map((number, i) => (\r\n      <div key={number + i}>\r\n        <p>{number}</p>\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  editButton() {\r\n    const id = this.props.match.params.id;\r\n    return (\r\n      <a\r\n        id=\"edit-button\"\r\n        href={\"add-friend/\" + id}\r\n        className=\"btn-floating btn-large orange lighten-1 waves-effect waves-light\"\r\n        onClick={e => {\r\n          e.preventDefault();\r\n          this.props.history.push(\"/add-friend/\" + id);\r\n        }} >\r\n        <i className=\"material-icons i-edit-button\">create</i>\r\n      </a>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let f = this.state.friend;\r\n    return (\r\n      <div className=\"row friend-details\">\r\n        <h3 className=\"center-align\">{f.name}</h3>\r\n        <div className=\"col s12 m10 offset-m1 l6 offset-l3\">\r\n          <div className=\"row valign-wrapper\">\r\n            <div className=\"col s8 offset-s2\">\r\n              {this.state.friend.timeOffset !== undefined\r\n                ? this.getLocaleTime()\r\n                : \"\"}\r\n            </div>\r\n            <div className=\"col s1\">\r\n              <i className={\r\n                  this.state.isNight\r\n                    ? \"material-icons right blue-text text-darken-3\"\r\n                    : \"material-icons right orange-text\"\r\n                } >\r\n                {this.state.isNight ? \"nights_stay\" : \"wb_sunny\"}\r\n              </i>\r\n            </div>\r\n            <div className=\"col s1\">{availabilityIcon(this.state.friend)}</div>\r\n          </div>\r\n          <br />\r\n          <hr />\r\n          <div className=\"row\">\r\n            <i className=\"material-icons col s1\">location_city</i>\r\n            <div className=\"col s7\">\r\n              <p>City: {f.city}</p>\r\n              <p>Country: {f.country}</p>\r\n              <p>Zone: {f.timezone}</p>\r\n            </div>\r\n            <div className=\"col s4\">\r\n              <p>Works: {f.works}</p>\r\n              <p>Sleeps: {f.sleeps}</p>\r\n            </div>\r\n          </div>\r\n          {f.phoneNumbers.length > 0 && (\r\n            <div>\r\n              <br />\r\n              <hr />\r\n              <div className=\"row\">\r\n                <i className=\"material-icons col s1\">phone</i>\r\n                <div className=\"col\">\r\n                  <p>Phone numbers</p>\r\n                  {this.listPhoneNumbers(f.phoneNumbers)}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {f.mailAddresses.length > 0 && (\r\n            <div>\r\n              <br />\r\n              <hr />\r\n              <i className=\"material-icons col s1\">email</i>\r\n              <div className=\"col\">\r\n                <p>Emails</p>\r\n                {this.listEmails(f.mailAddresses)}\r\n              </div>{\" \"}\r\n            </div>\r\n          )}\r\n        </div>\r\n        {this.editButton()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(FriendDetails);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport M from 'materialize-css'\r\n\r\nexport default class Navbar extends Component {\r\ncomponentDidMount() {\r\n  this.changeTheme()\r\n}\r\n\r\n  closeSidenav() {\r\n    M.Sidenav.getInstance(document.querySelector('.sidenav')).close()\r\n  }\r\n\r\n  changeTheme(theme) {\r\n    theme = !theme ? 'light' : 'dark';\r\n    document.documentElement.style.setProperty(`--theme-bg`, `var(--${theme}-mode-bg)`);\r\n    document.documentElement.style.setProperty(`--theme-ui`, `var(--${theme}-mode-ui)`);\r\n    document.documentElement.style.setProperty(`--theme-text`, `var(--${theme}-mode-text)`);\r\n  }\r\n\r\n  toggleDarkMode() {\r\n    return (\r\n      <span className=\"switch\">\r\n        <label>\r\n          Light\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={e => this.changeTheme(e.target.checked)}\r\n          />\r\n          <span className=\"lever\"></span>\r\n          Dark\r\n        </label>\r\n      </span>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {/* Needs the sidenav element to be parallel with the navbar, \r\n            because of an overlay bug */}\r\n        <div className=\"navbar-fixed\">\r\n          <nav className=\"nav-wrapper orange lighten-1\">\r\n            <div className=\"container\">\r\n              <Link className=\"brand-logo\" to=\"/\">Time for friends</Link>\r\n              <a href=\"!#\" className=\"sidenav-trigger\" data-target=\"mobile-links\"><i className=\"material-icons\">menu</i></a>\r\n              \r\n              {/* desktop links */}\r\n              <ul className=\"right hide-on-med-and-down\">\r\n                {this.toggleDarkMode()}\r\n                <li><Link to=\"/\">Home</Link></li>\r\n                <li><Link to=\"/add-friend\">Add Friend</Link></li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        </div>\r\n        {/* hidden side menu that toggles on mobile */}\r\n        <ul className=\"sidenav center-align\" id=\"mobile-links\">\r\n          {this.toggleDarkMode()}\r\n          <li><Link onClick={() => this.closeSidenav() } to=\"/\">Home</Link></li>\r\n          <li><Link onClick={() => this.closeSidenav() } to=\"/add-friend\">Add Friend</Link></li>\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport \"materialize-css/dist/css/materialize.min.css\";\r\nimport M from \"materialize-css\";\r\n\r\nimport FriendsContextProvider from \"./contexts/FriendsContext\";\r\nimport Home from \"./pages/Home\";\r\nimport AddFriend from \"./pages/AddFriend\";\r\nimport FriendDetails from \"./pages/FriendDetails\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\nexport default class App extends Component {\r\n  componentDidMount() {\r\n    // Auto initialize all the materialize things\r\n    M.AutoInit();\r\n  }\r\n\r\n  toTopHandler(e) {\r\n    setTimeout(() => {\r\n      window.history.replaceState({}, null, window.location.pathname.replace('#top', ''))\r\n    }, 5);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <FriendsContextProvider>\r\n        <Router>\r\n          <div id=\"top\" className=\"App scrollspy row\">\r\n            <Navbar />\r\n            <main className=\"container col s12 m8\">\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route exact path=\"/add-friend/:id?\" component={AddFriend} />\r\n              <Route\r\n                exact\r\n                path=\"/friend/:id?\"\r\n                render={props => <FriendDetails {...props} />}\r\n              />\r\n            </main>\r\n            <a\r\n              href=\"#top\"\r\n              id=\"to-top-btn\"\r\n              onClick={e => this.toTopHandler(e)}\r\n              className=\"btn-floating btn-large orange lighten-1 waves-effect waves-light\"\r\n            >\r\n              <i className=\"material-icons\">keyboard_arrow_up</i>\r\n            </a>\r\n            <footer className=\"footer center-align valign-wrapper\">\r\n              <h6 className=\"copyright\">&copy; 2019 Time for friends</h6>\r\n            </footer>\r\n          </div>\r\n        </Router>\r\n      </FriendsContextProvider>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'nouislider/distribute/nouislider.css';\r\nimport App from './App';\r\nimport './style.scss';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}